# Generated by Django 5.0.8 on 2025-09-01 19:05

import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('documents', '0003_historicallegalunit_eli_fragment_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalIngestLog',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('operation_type', models.CharField(choices=[('create', 'ایجاد'), ('update', 'به\u200cروزرسانی'), ('delete', 'حذف'), ('bulk_import', 'واردات انبوه'), ('sync', 'همگام\u200cسازی')], max_length=20, verbose_name='نوع عملیات')),
                ('source_system', models.CharField(max_length=50, verbose_name='سیستم مبدأ')),
                ('source_id', models.CharField(blank=True, max_length=100, verbose_name='شناسه مبدأ')),
                ('status', models.CharField(choices=[('pending', 'در انتظار'), ('processing', 'در حال پردازش'), ('success', 'موفق'), ('failed', 'ناموفق'), ('partial', 'جزئی')], default='pending', max_length=20, verbose_name='وضعیت')),
                ('records_processed', models.PositiveIntegerField(default=0, verbose_name='رکوردهای پردازش\u200cشده')),
                ('records_failed', models.PositiveIntegerField(default=0, verbose_name='رکوردهای ناموفق')),
                ('error_message', models.TextField(blank=True, verbose_name='پیام خطا')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='متادیتا')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان تکمیل')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical گزارش ورود داده',
                'verbose_name_plural': 'historical گزارش\u200cهای ورود داده',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInstrumentRelation',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('relation_type', models.CharField(choices=[('amends', 'اصلاح می\u200cکند'), ('repeals', 'لغو می\u200cکند'), ('references', 'ارجاع می\u200cدهد'), ('implements', 'اجرا می\u200cکند'), ('derives_from', 'مشتق از'), ('supersedes', 'جایگزین می\u200cشود')], max_length=30, verbose_name='نوع رابطه')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='تاریخ اثر')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical رابطه ابزار حقوقی',
                'verbose_name_plural': 'historical روابط ابزارهای حقوقی',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPinpointCitation',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('citation_type', models.CharField(choices=[('direct', 'ارجاع مستقیم'), ('see_also', 'نگاه کنید به'), ('cf', 'مقایسه کنید'), ('but_see', 'اما نگاه کنید'), ('contra', 'در تضاد با')], default='direct', max_length=20, verbose_name='نوع ارجاع')),
                ('context_text', models.TextField(blank=True, verbose_name='متن زمینه')),
                ('start_offset', models.PositiveIntegerField(blank=True, null=True, verbose_name='آفست شروع')),
                ('end_offset', models.PositiveIntegerField(blank=True, null=True, verbose_name='آفست پایان')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical ارجاع دقیق',
                'verbose_name_plural': 'historical ارجاعات دقیق',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRAGChunk',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('chunk_text', models.TextField(verbose_name='متن بخش')),
                ('chunk_index', models.PositiveIntegerField(verbose_name='شماره بخش')),
                ('start_offset', models.PositiveIntegerField(verbose_name='آفست شروع')),
                ('end_offset', models.PositiveIntegerField(verbose_name='آفست پایان')),
                ('embedding_model', models.CharField(max_length=100, verbose_name='مدل تعبیه')),
                ('embedding_vector', models.JSONField(blank=True, null=True, verbose_name='بردار تعبیه')),
                ('chunk_type', models.CharField(choices=[('paragraph', 'پاراگراف'), ('sentence', 'جمله'), ('article', 'ماده'), ('section', 'بخش'), ('custom', 'سفارشی')], default='paragraph', max_length=20, verbose_name='نوع بخش')),
                ('token_count', models.PositiveIntegerField(verbose_name='تعداد توکن')),
                ('quality_score', models.FloatField(default=1.0, help_text='امتیاز کیفیت (0.0 تا 1.0)', verbose_name='امتیاز کیفیت')),
                ('processed_at', models.DateTimeField(blank=True, editable=False, verbose_name='زمان پردازش')),
                ('processor_version', models.CharField(max_length=50, verbose_name='نسخه پردازشگر')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical بخش RAG',
                'verbose_name_plural': 'historical بخش\u200cهای RAG',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='نام')),
                ('slug', models.SlugField(max_length=100, verbose_name='نامک')),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('color', models.CharField(default='#6B7280', max_length=7, verbose_name='رنگ')),
                ('category', models.CharField(choices=[('subject', 'موضوعی'), ('procedural', 'رویه\u200cای'), ('status', 'وضعیت'), ('priority', 'اولویت'), ('source', 'منبع'), ('custom', 'سفارشی')], default='custom', max_length=20, verbose_name='دسته\u200cبندی')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical برچسب',
                'verbose_name_plural': 'historical برچسب\u200cها',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUnitTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('relevance_score', models.FloatField(default=1.0, help_text='امتیاز ارتباط (0.0 تا 1.0)', verbose_name='امتیاز ارتباط')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical برچسب واحد',
                'verbose_name_plural': 'historical برچسب\u200cهای واحد',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWorkTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('relevance_score', models.FloatField(default=1.0, help_text='امتیاز ارتباط (0.0 تا 1.0)', verbose_name='امتیاز ارتباط')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical برچسب اثر',
                'verbose_name_plural': 'historical برچسب\u200cهای اثر',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='IngestLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operation_type', models.CharField(choices=[('create', 'ایجاد'), ('update', 'به\u200cروزرسانی'), ('delete', 'حذف'), ('bulk_import', 'واردات انبوه'), ('sync', 'همگام\u200cسازی')], max_length=20, verbose_name='نوع عملیات')),
                ('source_system', models.CharField(max_length=50, verbose_name='سیستم مبدأ')),
                ('source_id', models.CharField(blank=True, max_length=100, verbose_name='شناسه مبدأ')),
                ('status', models.CharField(choices=[('pending', 'در انتظار'), ('processing', 'در حال پردازش'), ('success', 'موفق'), ('failed', 'ناموفق'), ('partial', 'جزئی')], default='pending', max_length=20, verbose_name='وضعیت')),
                ('records_processed', models.PositiveIntegerField(default=0, verbose_name='رکوردهای پردازش\u200cشده')),
                ('records_failed', models.PositiveIntegerField(default=0, verbose_name='رکوردهای ناموفق')),
                ('error_message', models.TextField(blank=True, verbose_name='پیام خطا')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='متادیتا')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان تکمیل')),
            ],
            options={
                'verbose_name': 'گزارش ورود داده',
                'verbose_name_plural': 'گزارش\u200cهای ورود داده',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InstrumentRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('relation_type', models.CharField(choices=[('amends', 'اصلاح می\u200cکند'), ('repeals', 'لغو می\u200cکند'), ('references', 'ارجاع می\u200cدهد'), ('implements', 'اجرا می\u200cکند'), ('derives_from', 'مشتق از'), ('supersedes', 'جایگزین می\u200cشود')], max_length=30, verbose_name='نوع رابطه')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='تاریخ اثر')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
            ],
            options={
                'verbose_name': 'رابطه ابزار حقوقی',
                'verbose_name_plural': 'روابط ابزارهای حقوقی',
            },
        ),
        migrations.CreateModel(
            name='PinpointCitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('citation_type', models.CharField(choices=[('direct', 'ارجاع مستقیم'), ('see_also', 'نگاه کنید به'), ('cf', 'مقایسه کنید'), ('but_see', 'اما نگاه کنید'), ('contra', 'در تضاد با')], default='direct', max_length=20, verbose_name='نوع ارجاع')),
                ('context_text', models.TextField(blank=True, verbose_name='متن زمینه')),
                ('start_offset', models.PositiveIntegerField(blank=True, null=True, verbose_name='آفست شروع')),
                ('end_offset', models.PositiveIntegerField(blank=True, null=True, verbose_name='آفست پایان')),
            ],
            options={
                'verbose_name': 'ارجاع دقیق',
                'verbose_name_plural': 'ارجاعات دقیق',
            },
        ),
        migrations.CreateModel(
            name='RAGChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chunk_text', models.TextField(verbose_name='متن بخش')),
                ('chunk_index', models.PositiveIntegerField(verbose_name='شماره بخش')),
                ('start_offset', models.PositiveIntegerField(verbose_name='آفست شروع')),
                ('end_offset', models.PositiveIntegerField(verbose_name='آفست پایان')),
                ('embedding_model', models.CharField(max_length=100, verbose_name='مدل تعبیه')),
                ('embedding_vector', models.JSONField(blank=True, null=True, verbose_name='بردار تعبیه')),
                ('chunk_type', models.CharField(choices=[('paragraph', 'پاراگراف'), ('sentence', 'جمله'), ('article', 'ماده'), ('section', 'بخش'), ('custom', 'سفارشی')], default='paragraph', max_length=20, verbose_name='نوع بخش')),
                ('token_count', models.PositiveIntegerField(verbose_name='تعداد توکن')),
                ('quality_score', models.FloatField(default=1.0, help_text='امتیاز کیفیت (0.0 تا 1.0)', verbose_name='امتیاز کیفیت')),
                ('processed_at', models.DateTimeField(auto_now_add=True, verbose_name='زمان پردازش')),
                ('processor_version', models.CharField(max_length=50, verbose_name='نسخه پردازشگر')),
            ],
            options={
                'verbose_name': 'بخش RAG',
                'verbose_name_plural': 'بخش\u200cهای RAG',
                'ordering': ['source_unit', 'chunk_index'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='نام')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='نامک')),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('color', models.CharField(default='#6B7280', max_length=7, verbose_name='رنگ')),
                ('category', models.CharField(choices=[('subject', 'موضوعی'), ('procedural', 'رویه\u200cای'), ('status', 'وضعیت'), ('priority', 'اولویت'), ('source', 'منبع'), ('custom', 'سفارشی')], default='custom', max_length=20, verbose_name='دسته\u200cبندی')),
            ],
            options={
                'verbose_name': 'برچسب',
                'verbose_name_plural': 'برچسب\u200cها',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UnitTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('relevance_score', models.FloatField(default=1.0, help_text='امتیاز ارتباط (0.0 تا 1.0)', verbose_name='امتیاز ارتباط')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
            ],
            options={
                'verbose_name': 'برچسب واحد',
                'verbose_name_plural': 'برچسب\u200cهای واحد',
            },
        ),
        migrations.CreateModel(
            name='WorkTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('relevance_score', models.FloatField(default=1.0, help_text='امتیاز ارتباط (0.0 تا 1.0)', verbose_name='امتیاز ارتباط')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
            ],
            options={
                'verbose_name': 'برچسب اثر',
                'verbose_name_plural': 'برچسب\u200cهای اثر',
            },
        ),
        migrations.AddField(
            model_name='fileasset',
            name='manifestation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='documents.instrumentmanifestation', verbose_name='تجلی'),
        ),
        migrations.AddField(
            model_name='historicalfileasset',
            name='manifestation',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentmanifestation', verbose_name='تجلی'),
        ),
        migrations.AddConstraint(
            model_name='fileasset',
            constraint=models.CheckConstraint(check=models.Q(('document__isnull', False), ('legal_unit__isnull', False), ('manifestation__isnull', False), _connector='OR'), name='fileasset_has_reference'),
        ),
        migrations.AddField(
            model_name='historicalingestlog',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalingestlog',
            name='started_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='آغازکننده'),
        ),
        migrations.AddField(
            model_name='historicalingestlog',
            name='target_expression',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentexpression', verbose_name='بیان هدف'),
        ),
        migrations.AddField(
            model_name='historicalingestlog',
            name='target_manifestation',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentmanifestation', verbose_name='تجلی هدف'),
        ),
        migrations.AddField(
            model_name='historicalingestlog',
            name='target_work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentwork', verbose_name='اثر هدف'),
        ),
        migrations.AddField(
            model_name='historicalinstrumentrelation',
            name='from_work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentwork', verbose_name='اثر مبدأ'),
        ),
        migrations.AddField(
            model_name='historicalinstrumentrelation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalinstrumentrelation',
            name='to_work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentwork', verbose_name='اثر مقصد'),
        ),
        migrations.AddField(
            model_name='historicalpinpointcitation',
            name='from_unit',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='واحد مبدأ'),
        ),
        migrations.AddField(
            model_name='historicalpinpointcitation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalpinpointcitation',
            name='to_unit',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='واحد مقصد'),
        ),
        migrations.AddField(
            model_name='historicalragchunk',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalragchunk',
            name='source_manifestation',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentmanifestation', verbose_name='تجلی مبدأ'),
        ),
        migrations.AddField(
            model_name='historicalragchunk',
            name='source_unit',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='واحد مبدأ'),
        ),
        migrations.AddField(
            model_name='historicaltag',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalunittag',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalunittag',
            name='tagged_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='برچسب\u200cزن'),
        ),
        migrations.AddField(
            model_name='historicalunittag',
            name='unit',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='واحد'),
        ),
        migrations.AddField(
            model_name='historicalworktag',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalworktag',
            name='tagged_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='برچسب\u200cزن'),
        ),
        migrations.AddField(
            model_name='historicalworktag',
            name='work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentwork', verbose_name='اثر'),
        ),
        migrations.AddField(
            model_name='ingestlog',
            name='started_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='started_ingests', to=settings.AUTH_USER_MODEL, verbose_name='آغازکننده'),
        ),
        migrations.AddField(
            model_name='ingestlog',
            name='target_expression',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingest_logs', to='documents.instrumentexpression', verbose_name='بیان هدف'),
        ),
        migrations.AddField(
            model_name='ingestlog',
            name='target_manifestation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingest_logs', to='documents.instrumentmanifestation', verbose_name='تجلی هدف'),
        ),
        migrations.AddField(
            model_name='ingestlog',
            name='target_work',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingest_logs', to='documents.instrumentwork', verbose_name='اثر هدف'),
        ),
        migrations.AddField(
            model_name='instrumentrelation',
            name='from_work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_relations', to='documents.instrumentwork', verbose_name='اثر مبدأ'),
        ),
        migrations.AddField(
            model_name='instrumentrelation',
            name='to_work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_relations', to='documents.instrumentwork', verbose_name='اثر مقصد'),
        ),
        migrations.AddField(
            model_name='pinpointcitation',
            name='from_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_citations', to='documents.legalunit', verbose_name='واحد مبدأ'),
        ),
        migrations.AddField(
            model_name='pinpointcitation',
            name='to_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_citations', to='documents.legalunit', verbose_name='واحد مقصد'),
        ),
        migrations.AddField(
            model_name='ragchunk',
            name='source_manifestation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rag_chunks', to='documents.instrumentmanifestation', verbose_name='تجلی مبدأ'),
        ),
        migrations.AddField(
            model_name='ragchunk',
            name='source_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rag_chunks', to='documents.legalunit', verbose_name='واحد مبدأ'),
        ),
        migrations.AddField(
            model_name='historicalworktag',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.tag', verbose_name='برچسب'),
        ),
        migrations.AddField(
            model_name='historicalunittag',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.tag', verbose_name='برچسب'),
        ),
        migrations.AddField(
            model_name='unittag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_tags', to='documents.tag', verbose_name='برچسب'),
        ),
        migrations.AddField(
            model_name='unittag',
            name='tagged_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_taggings', to=settings.AUTH_USER_MODEL, verbose_name='برچسب\u200cزن'),
        ),
        migrations.AddField(
            model_name='unittag',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_tags', to='documents.legalunit', verbose_name='واحد'),
        ),
        migrations.AddField(
            model_name='worktag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_tags', to='documents.tag', verbose_name='برچسب'),
        ),
        migrations.AddField(
            model_name='worktag',
            name='tagged_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_taggings', to=settings.AUTH_USER_MODEL, verbose_name='برچسب\u200cزن'),
        ),
        migrations.AddField(
            model_name='worktag',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_tags', to='documents.instrumentwork', verbose_name='اثر'),
        ),
        migrations.AlterUniqueTogether(
            name='instrumentrelation',
            unique_together={('from_work', 'to_work', 'relation_type')},
        ),
        migrations.AlterUniqueTogether(
            name='ragchunk',
            unique_together={('source_unit', 'chunk_index')},
        ),
        migrations.AlterUniqueTogether(
            name='unittag',
            unique_together={('unit', 'tag')},
        ),
        migrations.AlterUniqueTogether(
            name='worktag',
            unique_together={('work', 'tag')},
        ),
    ]
