# Generated by Django 5.0.8 on 2025-09-05 13:50

import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('masterdata', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='نام')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='نامک')),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('color', models.CharField(default='#6B7280', max_length=7, verbose_name='رنگ')),
                ('category', models.CharField(choices=[('subject', 'موضوعی'), ('procedural', 'رویه\u200cای'), ('status', 'وضعیت'), ('priority', 'اولویت'), ('source', 'منبع'), ('custom', 'سفارشی')], default='custom', max_length=20, verbose_name='دسته\u200cبندی')),
            ],
            options={
                'verbose_name': 'برچسب',
                'verbose_name_plural': 'برچسب\u200cها',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalInstrumentWork',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('title_official', models.CharField(max_length=500, verbose_name='عنوان رسمی')),
                ('doc_type', models.CharField(choices=[('law', 'قانون'), ('bylaw', 'آیین\u200cنامه'), ('circular', 'بخشنامه'), ('ruling', 'رأی'), ('decree', 'مصوبه'), ('regulation', 'مقررات'), ('instruction', 'دستورالعمل'), ('other', 'سایر')], default='law', max_length=20, verbose_name='نوع سند')),
                ('eli_uri_work', models.URLField(blank=True, help_text='https://domain/country/type/year/number<br>مثال: https://laws.example.ir/ir/act/2020/123', verbose_name='ELI URI اثر')),
                ('urn_lex', models.CharField(blank=True, help_text='ir:authority:doc_type:yyyy-mm-dd:number<br>مثال: ir:majlis:law:2020-06-01:123', max_length=200, verbose_name='URN LEX')),
                ('local_slug', models.SlugField(max_length=100, verbose_name='شناسه محلی')),
                ('subject_summary', models.TextField(blank=True, verbose_name='خلاصه موضوع')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('authority', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.issuingauthority', verbose_name='مرجع صادرکننده')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('jurisdiction', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.jurisdiction', verbose_name='حوزه قضایی')),
                ('primary_language', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.language', verbose_name='زبان اصلی')),
            ],
            options={
                'verbose_name': 'historical تعریف سند حقوقی',
                'verbose_name_plural': 'historical تعریف سند حقوقی',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='نام')),
                ('slug', models.SlugField(max_length=100, verbose_name='نامک')),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('color', models.CharField(default='#6B7280', max_length=7, verbose_name='رنگ')),
                ('category', models.CharField(choices=[('subject', 'موضوعی'), ('procedural', 'رویه\u200cای'), ('status', 'وضعیت'), ('priority', 'اولویت'), ('source', 'منبع'), ('custom', 'سفارشی')], default='custom', max_length=20, verbose_name='دسته\u200cبندی')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical برچسب',
                'verbose_name_plural': 'historical برچسب\u200cها',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='InstrumentExpression',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consolidation_level', models.CharField(choices=[('base', 'پایه'), ('consolidated', 'تجمیع شده'), ('annotated', 'حاشیه نویسی')], default='base', max_length=20, verbose_name='سطح تلفیق')),
                ('expression_date', models.DateField(verbose_name='تاریخ نسخه')),
                ('eli_uri_expr', models.URLField(blank=True, verbose_name='ELI URI بیان')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='masterdata.language', verbose_name='زبان')),
            ],
            options={
                'verbose_name': 'تعریف نسخه سند',
                'verbose_name_plural': 'تعریف نسخه سند',
            },
        ),
        migrations.CreateModel(
            name='HistoricalInstrumentManifestation',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('publication_date', models.DateField(verbose_name='تاریخ انتشار')),
                ('official_gazette_name', models.CharField(blank=True, max_length=200, verbose_name='نام روزنامه رسمی')),
                ('gazette_issue_no', models.CharField(blank=True, max_length=50, verbose_name='شماره نامه')),
                ('page_start', models.PositiveIntegerField(blank=True, null=True, verbose_name='صفحه شروع-پایان')),
                ('source_url', models.URLField(blank=True, verbose_name='ELI URI / URL منبع')),
                ('checksum_sha256', models.CharField(blank=True, db_index=True, max_length=64, verbose_name='چکسام SHA256')),
                ('in_force_from', models.DateField(blank=True, null=True, verbose_name='اجرا از تاریخ')),
                ('repeal_status', models.CharField(choices=[('in_force', 'جاری و لازم الاجرا'), ('repealed', 'لغو یا منسوخ شده')], default='in_force', max_length=20, verbose_name='وضعیت سند')),
                ('in_force_to', models.DateField(blank=True, help_text='در صورتی که وضعیت سند "لغو یا منسوخ شده" باشد، این فیلد الزامی است.', null=True, verbose_name='اجرا تا تاریخ')),
                ('retrieval_date', models.DateTimeField(blank=True, editable=False, verbose_name='تاریخ بازیابی')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('expr', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentexpression', verbose_name='نسخه سند')),
            ],
            options={
                'verbose_name': 'historical تعریف انتشار سند',
                'verbose_name_plural': 'historical تعریف انتشار سند',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='InstrumentManifestation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('publication_date', models.DateField(verbose_name='تاریخ انتشار')),
                ('official_gazette_name', models.CharField(blank=True, max_length=200, verbose_name='نام روزنامه رسمی')),
                ('gazette_issue_no', models.CharField(blank=True, max_length=50, verbose_name='شماره نامه')),
                ('page_start', models.PositiveIntegerField(blank=True, null=True, verbose_name='صفحه شروع-پایان')),
                ('source_url', models.URLField(blank=True, verbose_name='ELI URI / URL منبع')),
                ('checksum_sha256', models.CharField(blank=True, max_length=64, unique=True, verbose_name='چکسام SHA256')),
                ('in_force_from', models.DateField(blank=True, null=True, verbose_name='اجرا از تاریخ')),
                ('repeal_status', models.CharField(choices=[('in_force', 'جاری و لازم الاجرا'), ('repealed', 'لغو یا منسوخ شده')], default='in_force', max_length=20, verbose_name='وضعیت سند')),
                ('in_force_to', models.DateField(blank=True, help_text='در صورتی که وضعیت سند "لغو یا منسوخ شده" باشد، این فیلد الزامی است.', null=True, verbose_name='اجرا تا تاریخ')),
                ('retrieval_date', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ بازیابی')),
                ('expr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manifestations', to='documents.instrumentexpression', verbose_name='نسخه سند')),
            ],
            options={
                'verbose_name': 'تعریف انتشار سند',
                'verbose_name_plural': 'تعریف انتشار سند',
            },
        ),
        migrations.CreateModel(
            name='InstrumentWork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title_official', models.CharField(max_length=500, verbose_name='عنوان رسمی')),
                ('doc_type', models.CharField(choices=[('law', 'قانون'), ('bylaw', 'آیین\u200cنامه'), ('circular', 'بخشنامه'), ('ruling', 'رأی'), ('decree', 'مصوبه'), ('regulation', 'مقررات'), ('instruction', 'دستورالعمل'), ('other', 'سایر')], default='law', max_length=20, verbose_name='نوع سند')),
                ('eli_uri_work', models.URLField(blank=True, help_text='https://domain/country/type/year/number<br>مثال: https://laws.example.ir/ir/act/2020/123', verbose_name='ELI URI اثر')),
                ('urn_lex', models.CharField(blank=True, help_text='ir:authority:doc_type:yyyy-mm-dd:number<br>مثال: ir:majlis:law:2020-06-01:123', max_length=200, verbose_name='URN LEX')),
                ('local_slug', models.SlugField(max_length=100, unique=True, verbose_name='شناسه محلی')),
                ('subject_summary', models.TextField(blank=True, verbose_name='خلاصه موضوع')),
                ('authority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrument_works', to='masterdata.issuingauthority', verbose_name='مرجع صادرکننده')),
                ('jurisdiction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrument_works', to='masterdata.jurisdiction', verbose_name='حوزه قضایی')),
                ('primary_language', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='masterdata.language', verbose_name='زبان اصلی')),
            ],
            options={
                'verbose_name': 'تعریف سند حقوقی',
                'verbose_name_plural': 'تعریف سند حقوقی',
            },
        ),
        migrations.CreateModel(
            name='InstrumentRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('relation_type', models.CharField(choices=[('amends', 'اصلاح می\u200cکند'), ('repeals', 'لغو می\u200cکند'), ('references', 'ارجاع می\u200cدهد'), ('implements', 'اجرا می\u200cکند'), ('derives_from', 'مشتق از'), ('supersedes', 'جایگزین می\u200cشود')], max_length=30, verbose_name='نوع رابطه')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='تاریخ اثر')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
                ('from_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_relations', to='documents.instrumentwork', verbose_name='اثر مبدأ')),
                ('to_work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_relations', to='documents.instrumentwork', verbose_name='اثر مقصد')),
            ],
            options={
                'verbose_name': 'رابطه ابزار حقوقی',
                'verbose_name_plural': 'روابط ابزارهای حقوقی',
            },
        ),
        migrations.AddField(
            model_name='instrumentexpression',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expressions', to='documents.instrumentwork', verbose_name='سند حقوقی'),
        ),
        migrations.CreateModel(
            name='IngestLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operation_type', models.CharField(choices=[('create', 'ایجاد'), ('update', 'به\u200cروزرسانی'), ('delete', 'حذف'), ('bulk_import', 'واردات انبوه'), ('sync', 'همگام\u200cسازی')], max_length=20, verbose_name='نوع عملیات')),
                ('source_system', models.CharField(max_length=50, verbose_name='سیستم مبدأ')),
                ('source_id', models.CharField(blank=True, max_length=100, verbose_name='شناسه مبدأ')),
                ('status', models.CharField(choices=[('pending', 'در انتظار'), ('processing', 'در حال پردازش'), ('success', 'موفق'), ('failed', 'ناموفق'), ('partial', 'جزئی')], default='pending', max_length=20, verbose_name='وضعیت')),
                ('records_processed', models.PositiveIntegerField(default=0, verbose_name='رکوردهای پردازش\u200cشده')),
                ('records_failed', models.PositiveIntegerField(default=0, verbose_name='رکوردهای ناموفق')),
                ('error_message', models.TextField(blank=True, verbose_name='پیام خطا')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='متادیتا')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان تکمیل')),
                ('started_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='started_ingests', to=settings.AUTH_USER_MODEL, verbose_name='آغازکننده')),
                ('target_expression', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingest_logs', to='documents.instrumentexpression', verbose_name='بیان هدف')),
                ('target_manifestation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingest_logs', to='documents.instrumentmanifestation', verbose_name='تجلی هدف')),
                ('target_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingest_logs', to='documents.instrumentwork', verbose_name='اثر هدف')),
            ],
            options={
                'verbose_name': 'گزارش ورود داده',
                'verbose_name_plural': 'گزارش\u200cهای ورود داده',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalInstrumentRelation',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('relation_type', models.CharField(choices=[('amends', 'اصلاح می\u200cکند'), ('repeals', 'لغو می\u200cکند'), ('references', 'ارجاع می\u200cدهد'), ('implements', 'اجرا می\u200cکند'), ('derives_from', 'مشتق از'), ('supersedes', 'جایگزین می\u200cشود')], max_length=30, verbose_name='نوع رابطه')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='تاریخ اثر')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('from_work', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentwork', verbose_name='اثر مبدأ')),
                ('to_work', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentwork', verbose_name='اثر مقصد')),
            ],
            options={
                'verbose_name': 'historical رابطه ابزار حقوقی',
                'verbose_name_plural': 'historical روابط ابزارهای حقوقی',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInstrumentExpression',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('consolidation_level', models.CharField(choices=[('base', 'پایه'), ('consolidated', 'تجمیع شده'), ('annotated', 'حاشیه نویسی')], default='base', max_length=20, verbose_name='سطح تلفیق')),
                ('expression_date', models.DateField(verbose_name='تاریخ نسخه')),
                ('eli_uri_expr', models.URLField(blank=True, verbose_name='ELI URI بیان')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.language', verbose_name='زبان')),
                ('work', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentwork', verbose_name='سند حقوقی')),
            ],
            options={
                'verbose_name': 'historical تعریف نسخه سند',
                'verbose_name_plural': 'historical تعریف نسخه سند',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIngestLog',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('operation_type', models.CharField(choices=[('create', 'ایجاد'), ('update', 'به\u200cروزرسانی'), ('delete', 'حذف'), ('bulk_import', 'واردات انبوه'), ('sync', 'همگام\u200cسازی')], max_length=20, verbose_name='نوع عملیات')),
                ('source_system', models.CharField(max_length=50, verbose_name='سیستم مبدأ')),
                ('source_id', models.CharField(blank=True, max_length=100, verbose_name='شناسه مبدأ')),
                ('status', models.CharField(choices=[('pending', 'در انتظار'), ('processing', 'در حال پردازش'), ('success', 'موفق'), ('failed', 'ناموفق'), ('partial', 'جزئی')], default='pending', max_length=20, verbose_name='وضعیت')),
                ('records_processed', models.PositiveIntegerField(default=0, verbose_name='رکوردهای پردازش\u200cشده')),
                ('records_failed', models.PositiveIntegerField(default=0, verbose_name='رکوردهای ناموفق')),
                ('error_message', models.TextField(blank=True, verbose_name='پیام خطا')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='متادیتا')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='زمان تکمیل')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('started_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='آغازکننده')),
                ('target_expression', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentexpression', verbose_name='بیان هدف')),
                ('target_manifestation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentmanifestation', verbose_name='تجلی هدف')),
                ('target_work', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentwork', verbose_name='اثر هدف')),
            ],
            options={
                'verbose_name': 'historical گزارش ورود داده',
                'verbose_name_plural': 'historical گزارش\u200cهای ورود داده',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LegalUnit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('unit_type', models.CharField(choices=[('part', 'بخش'), ('chapter', 'فصل'), ('section', 'قسمت'), ('article', 'ماده'), ('clause', 'بند'), ('subclause', 'زیربند'), ('note', 'تبصره'), ('appendix', 'ضمیمه')], max_length=20, verbose_name='نوع واحد')),
                ('label', models.CharField(max_length=100, verbose_name='برچسب')),
                ('number', models.CharField(blank=True, max_length=50, verbose_name='شماره')),
                ('order_index', models.PositiveIntegerField(default=0, verbose_name='ترتیب')),
                ('path_label', models.CharField(blank=True, max_length=500, verbose_name='مسیر کامل')),
                ('content', models.TextField(verbose_name='محتوا')),
                ('eli_fragment', models.CharField(blank=True, max_length=200, verbose_name='ELI Fragment')),
                ('xml_id', models.CharField(blank=True, max_length=100, verbose_name='XML ID')),
                ('text_plain', models.TextField(blank=True, verbose_name='متن ساده')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('expr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='units', to='documents.instrumentexpression', verbose_name='بیان')),
                ('manifestation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='units', to='documents.instrumentmanifestation', verbose_name='تجلی')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='documents.legalunit', verbose_name='والد')),
                ('work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='units', to='documents.instrumentwork', verbose_name='اثر')),
            ],
            options={
                'verbose_name': 'واحد حقوقی',
                'verbose_name_plural': 'واحدهای حقوقی',
                'ordering': ['tree_id', 'lft'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalRAGChunk',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('chunk_text', models.TextField(verbose_name='متن بخش')),
                ('chunk_index', models.PositiveIntegerField(verbose_name='شماره بخش')),
                ('start_offset', models.PositiveIntegerField(verbose_name='آفست شروع')),
                ('end_offset', models.PositiveIntegerField(verbose_name='آفست پایان')),
                ('embedding_model', models.CharField(max_length=100, verbose_name='مدل تعبیه')),
                ('embedding_vector', models.JSONField(blank=True, null=True, verbose_name='بردار تعبیه')),
                ('chunk_type', models.CharField(choices=[('paragraph', 'پاراگراف'), ('sentence', 'جمله'), ('article', 'ماده'), ('section', 'بخش'), ('custom', 'سفارشی')], default='paragraph', max_length=20, verbose_name='نوع بخش')),
                ('token_count', models.PositiveIntegerField(verbose_name='تعداد توکن')),
                ('quality_score', models.FloatField(default=1.0, help_text='امتیاز کیفیت (0.0 تا 1.0)', verbose_name='امتیاز کیفیت')),
                ('processed_at', models.DateTimeField(blank=True, editable=False, verbose_name='زمان پردازش')),
                ('processor_version', models.CharField(max_length=50, verbose_name='نسخه پردازشگر')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('source_manifestation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentmanifestation', verbose_name='تجلی مبدأ')),
                ('source_unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='واحد مبدأ')),
            ],
            options={
                'verbose_name': 'historical بخش RAG',
                'verbose_name_plural': 'historical بخش\u200cهای RAG',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalQAEntry',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('question', models.TextField(verbose_name='سؤال')),
                ('answer', models.TextField(verbose_name='پاسخ')),
                ('status', models.CharField(choices=[('draft', 'پیش\u200cنویس'), ('under_review', 'در حال بررسی'), ('approved', 'تأیید شده'), ('rejected', 'رد شده')], default='draft', max_length=20, verbose_name='وضعیت')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('approved_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='تأییدکننده')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='ایجادکننده')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='بازبین')),
                ('source_unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='واحد مرجع')),
            ],
            options={
                'verbose_name': 'historical پرسش و پاسخ',
                'verbose_name_plural': 'historical پرسش و پاسخ\u200cها',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPinpointCitation',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('citation_type', models.CharField(choices=[('direct', 'ارجاع مستقیم'), ('see_also', 'نگاه کنید به'), ('cf', 'مقایسه کنید'), ('but_see', 'اما نگاه کنید'), ('contra', 'در تضاد با')], default='direct', max_length=20, verbose_name='نوع ارجاع')),
                ('context_text', models.TextField(blank=True, verbose_name='متن زمینه')),
                ('start_offset', models.PositiveIntegerField(blank=True, null=True, verbose_name='آفست شروع')),
                ('end_offset', models.PositiveIntegerField(blank=True, null=True, verbose_name='آفست پایان')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('from_unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='واحد مبدأ')),
                ('to_unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='واحد مقصد')),
            ],
            options={
                'verbose_name': 'historical ارجاع دقیق',
                'verbose_name_plural': 'historical ارجاعات دقیق',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLegalUnit',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('unit_type', models.CharField(choices=[('part', 'بخش'), ('chapter', 'فصل'), ('section', 'قسمت'), ('article', 'ماده'), ('clause', 'بند'), ('subclause', 'زیربند'), ('note', 'تبصره'), ('appendix', 'ضمیمه')], max_length=20, verbose_name='نوع واحد')),
                ('label', models.CharField(max_length=100, verbose_name='برچسب')),
                ('number', models.CharField(blank=True, max_length=50, verbose_name='شماره')),
                ('order_index', models.PositiveIntegerField(default=0, verbose_name='ترتیب')),
                ('path_label', models.CharField(blank=True, max_length=500, verbose_name='مسیر کامل')),
                ('content', models.TextField(verbose_name='محتوا')),
                ('eli_fragment', models.CharField(blank=True, max_length=200, verbose_name='ELI Fragment')),
                ('xml_id', models.CharField(blank=True, max_length=100, verbose_name='XML ID')),
                ('text_plain', models.TextField(blank=True, verbose_name='متن ساده')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('expr', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentexpression', verbose_name='بیان')),
                ('manifestation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentmanifestation', verbose_name='تجلی')),
                ('work', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentwork', verbose_name='اثر')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='والد')),
            ],
            options={
                'verbose_name': 'historical واحد حقوقی',
                'verbose_name_plural': 'historical واحدهای حقوقی',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFileAsset',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('bucket', models.CharField(max_length=100, verbose_name='سطل')),
                ('object_key', models.CharField(max_length=500, verbose_name='کلید شیء')),
                ('original_filename', models.CharField(max_length=255, verbose_name='نام فایل اصلی')),
                ('content_type', models.CharField(max_length=100, verbose_name='نوع محتوا')),
                ('size_bytes', models.PositiveBigIntegerField(verbose_name='اندازه (بایت)')),
                ('sha256', models.CharField(max_length=64, verbose_name='هش SHA256')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='آپلودکننده')),
                ('manifestation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentmanifestation', verbose_name='تجلی')),
                ('legal_unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='واحد حقوقی')),
            ],
            options={
                'verbose_name': 'historical فایل ضمیمه',
                'verbose_name_plural': 'historical فایل\u200cهای ضمیمه',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='FileAsset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bucket', models.CharField(max_length=100, verbose_name='سطل')),
                ('object_key', models.CharField(max_length=500, verbose_name='کلید شیء')),
                ('original_filename', models.CharField(max_length=255, verbose_name='نام فایل اصلی')),
                ('content_type', models.CharField(max_length=100, verbose_name='نوع محتوا')),
                ('size_bytes', models.PositiveBigIntegerField(verbose_name='اندازه (بایت)')),
                ('sha256', models.CharField(max_length=64, verbose_name='هش SHA256')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL, verbose_name='آپلودکننده')),
                ('manifestation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='documents.instrumentmanifestation', verbose_name='تجلی')),
                ('legal_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='documents.legalunit', verbose_name='واحد حقوقی')),
            ],
            options={
                'verbose_name': 'فایل ضمیمه',
                'verbose_name_plural': 'فایل\u200cهای ضمیمه',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PinpointCitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('citation_type', models.CharField(choices=[('direct', 'ارجاع مستقیم'), ('see_also', 'نگاه کنید به'), ('cf', 'مقایسه کنید'), ('but_see', 'اما نگاه کنید'), ('contra', 'در تضاد با')], default='direct', max_length=20, verbose_name='نوع ارجاع')),
                ('context_text', models.TextField(blank=True, verbose_name='متن زمینه')),
                ('start_offset', models.PositiveIntegerField(blank=True, null=True, verbose_name='آفست شروع')),
                ('end_offset', models.PositiveIntegerField(blank=True, null=True, verbose_name='آفست پایان')),
                ('from_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_citations', to='documents.legalunit', verbose_name='واحد مبدأ')),
                ('to_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_citations', to='documents.legalunit', verbose_name='واحد مقصد')),
            ],
            options={
                'verbose_name': 'ارجاع دقیق',
                'verbose_name_plural': 'ارجاعات دقیق',
            },
        ),
        migrations.CreateModel(
            name='QAEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.TextField(verbose_name='سؤال')),
                ('answer', models.TextField(verbose_name='پاسخ')),
                ('status', models.CharField(choices=[('draft', 'پیش\u200cنویس'), ('under_review', 'در حال بررسی'), ('approved', 'تأیید شده'), ('rejected', 'رد شده')], default='draft', max_length=20, verbose_name='وضعیت')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_qa_entries', to=settings.AUTH_USER_MODEL, verbose_name='تأییدکننده')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_qa_entries', to=settings.AUTH_USER_MODEL, verbose_name='ایجادکننده')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_qa_entries', to=settings.AUTH_USER_MODEL, verbose_name='بازبین')),
                ('source_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qa_entries', to='documents.legalunit', verbose_name='واحد مرجع')),
                ('tags', models.ManyToManyField(blank=True, related_name='qa_entries', to='masterdata.vocabularyterm', verbose_name='برچسب\u200cها')),
            ],
            options={
                'verbose_name': 'پرسش و پاسخ',
                'verbose_name_plural': 'پرسش و پاسخ\u200cها',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RAGChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chunk_text', models.TextField(verbose_name='متن بخش')),
                ('chunk_index', models.PositiveIntegerField(verbose_name='شماره بخش')),
                ('start_offset', models.PositiveIntegerField(verbose_name='آفست شروع')),
                ('end_offset', models.PositiveIntegerField(verbose_name='آفست پایان')),
                ('embedding_model', models.CharField(max_length=100, verbose_name='مدل تعبیه')),
                ('embedding_vector', models.JSONField(blank=True, null=True, verbose_name='بردار تعبیه')),
                ('chunk_type', models.CharField(choices=[('paragraph', 'پاراگراف'), ('sentence', 'جمله'), ('article', 'ماده'), ('section', 'بخش'), ('custom', 'سفارشی')], default='paragraph', max_length=20, verbose_name='نوع بخش')),
                ('token_count', models.PositiveIntegerField(verbose_name='تعداد توکن')),
                ('quality_score', models.FloatField(default=1.0, help_text='امتیاز کیفیت (0.0 تا 1.0)', verbose_name='امتیاز کیفیت')),
                ('processed_at', models.DateTimeField(auto_now_add=True, verbose_name='زمان پردازش')),
                ('processor_version', models.CharField(max_length=50, verbose_name='نسخه پردازشگر')),
                ('source_manifestation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rag_chunks', to='documents.instrumentmanifestation', verbose_name='تجلی مبدأ')),
                ('source_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rag_chunks', to='documents.legalunit', verbose_name='واحد مبدأ')),
            ],
            options={
                'verbose_name': 'بخش RAG',
                'verbose_name_plural': 'بخش\u200cهای RAG',
                'ordering': ['source_unit', 'chunk_index'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalWorkTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('relevance_score', models.FloatField(default=1.0, help_text='امتیاز ارتباط (0.0 تا 1.0)', verbose_name='امتیاز ارتباط')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tagged_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='برچسب\u200cزن')),
                ('work', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.instrumentwork', verbose_name='اثر')),
                ('tag', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.tag', verbose_name='برچسب')),
            ],
            options={
                'verbose_name': 'historical برچسب اثر',
                'verbose_name_plural': 'historical برچسب\u200cهای اثر',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUnitTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('relevance_score', models.FloatField(default=1.0, help_text='امتیاز ارتباط (0.0 تا 1.0)', verbose_name='امتیاز ارتباط')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tagged_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='برچسب\u200cزن')),
                ('unit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.legalunit', verbose_name='واحد')),
                ('tag', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='documents.tag', verbose_name='برچسب')),
            ],
            options={
                'verbose_name': 'historical برچسب واحد',
                'verbose_name_plural': 'historical برچسب\u200cهای واحد',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='UnitTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('relevance_score', models.FloatField(default=1.0, help_text='امتیاز ارتباط (0.0 تا 1.0)', verbose_name='امتیاز ارتباط')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_tags', to='documents.tag', verbose_name='برچسب')),
                ('tagged_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_taggings', to=settings.AUTH_USER_MODEL, verbose_name='برچسب\u200cزن')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_tags', to='documents.legalunit', verbose_name='واحد')),
            ],
            options={
                'verbose_name': 'برچسب واحد',
                'verbose_name_plural': 'برچسب\u200cهای واحد',
            },
        ),
        migrations.CreateModel(
            name='WorkTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('relevance_score', models.FloatField(default=1.0, help_text='امتیاز ارتباط (0.0 تا 1.0)', verbose_name='امتیاز ارتباط')),
                ('notes', models.TextField(blank=True, verbose_name='یادداشت\u200cها')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_tags', to='documents.tag', verbose_name='برچسب')),
                ('tagged_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_taggings', to=settings.AUTH_USER_MODEL, verbose_name='برچسب\u200cزن')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_tags', to='documents.instrumentwork', verbose_name='اثر')),
            ],
            options={
                'verbose_name': 'برچسب اثر',
                'verbose_name_plural': 'برچسب\u200cهای اثر',
            },
        ),
        migrations.AddConstraint(
            model_name='instrumentmanifestation',
            constraint=models.CheckConstraint(check=models.Q(('in_force_to__gte', models.F('in_force_from')), ('in_force_to__isnull', True), _connector='OR'), name='valid_in_force_period'),
        ),
        migrations.AlterUniqueTogether(
            name='instrumentrelation',
            unique_together={('from_work', 'to_work', 'relation_type')},
        ),
        migrations.AlterUniqueTogether(
            name='instrumentexpression',
            unique_together={('work', 'language', 'consolidation_level', 'expression_date')},
        ),
        migrations.AlterUniqueTogether(
            name='ragchunk',
            unique_together={('source_unit', 'chunk_index')},
        ),
        migrations.AlterUniqueTogether(
            name='unittag',
            unique_together={('unit', 'tag')},
        ),
        migrations.AlterUniqueTogether(
            name='worktag',
            unique_together={('work', 'tag')},
        ),
    ]
